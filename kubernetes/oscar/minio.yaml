---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc-claim
  namespace: tools
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  selector:
    matchLabels:
      type: "usb-drive"
      disk: "d"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: tools
spec:
  selector:
    matchLabels:
      app: minio-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio-app
    spec:
      ## Force us to run on the same node with the attached disks
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - "kworker2"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: minio-pvc-claim
      dnsPolicy: ClusterFirst
      containers:
      - name: minio
        volumeMounts:
        - name: data 
          mountPath: /data
        image: minio/minio
        args:
        - server
        - /data
        env:
        ## WARNING: Change this to something more secure
        - name: MINIO_ACCESS_KEY
          value: "minio"
        - name: MINIO_SECRET_KEY
          value: "minio123"
        - name: MINIO_API_CORS_ALLOW_ORIGIN
          value: "*"
        ports:
        - containerPort: 9000
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: tools
spec:
  type: LoadBalancer
  selector:
    app: minio-app
  ports:
    - name: minio-http
      port: 80           # port exposed by ingress
      targetPort: 9000   # port exposed by the pod
      protocol: TCP
  externalTrafficPolicy: Local


### Install client
### https://min.io/docs/minio/linux/reference/minio-mc.html

### curl https://dl.min.io/client/mc/release/linux-amd64/mc \
###  --create-dirs \
###  -o $HOME/bin/mc
### chmod u+x $HOME/bin/mc
### mc --help

### Setup client
### mc alias set oscar http://192.168.1.23:80 minio minio123
### mc admin info myminio
### mc mb oscar/test-bucket
### mc ls oscar